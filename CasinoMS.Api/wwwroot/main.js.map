{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth-guard.ts","./src/app/auth/auth-loader-guard.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/record/cash-in/cash-in.component.ts","./src/app/record/cash-in/cash-in.component.html","./src/app/record/cash-out/cash-out.component.ts","./src/app/record/cash-out/cash-out.component.html","./src/app/record/record.component.ts","./src/app/record/record.component.html","./src/app/reports/loaders-transactions/loaders-transactions.component.ts","./src/app/reports/loaders-transactions/loaders-transactions.component.html","./src/app/reports/my-transactions/my-transactions.component.ts","./src/app/reports/my-transactions/my-transactions.component.html","./src/app/reports/reports.component.ts","./src/app/reports/reports.component.html","./src/app/shared/constants.ts","./src/app/shared/definition.service.ts","./src/app/shared/excel.service.ts","./src/app/shared/global.service.ts","./src/app/shared/login.service.ts","./src/app/shared/pipes/search-filter.pipe.ts","./src/app/shared/transaction.service.ts","./src/app/shared/user.service.ts","./src/app/user/login/login.component.ts","./src/app/user/login/login.component.html","./src/app/user/registration/registration.component.ts","./src/app/user/registration/registration.component.html","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/environments/environment.ts","./src/main.ts","fs (ignored)","crypto (ignored)","stream (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn-bd\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn-bd.js\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-mx\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-mx.js\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthFinancerGuard } from './auth/auth-financer-guard';\nimport { AuthGuard } from './auth/auth-guard';\nimport { AuthLoaderGuard } from './auth/auth-loader-guard';\nimport { HomeComponent } from './home/home.component';\nimport { CashInComponent } from './record/cash-in/cash-in.component';\nimport { CashOutComponent } from './record/cash-out/cash-out.component';\nimport { LoadersTransactionsComponent } from './reports/loaders-transactions/loaders-transactions.component';\nimport { MyTransactionsComponent } from './reports/my-transactions/my-transactions.component';\nimport { ReportsComponent } from './reports/reports.component';\nimport { LoginComponent } from './user/login/login.component';\nimport { RegistrationComponent } from './user/registration/registration.component';\nimport { UserComponent } from './user/user.component';\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    canActivate: [AuthGuard],\n    component: HomeComponent\n  },\n  { path: '', redirectTo: '/user/login', pathMatch: 'full' },\n  {\n    path: 'user', component: UserComponent,\n    children: [\n      { path: 'registration', component: RegistrationComponent },\n      { path: 'login', component: LoginComponent }\n    ]\n  },\n  {\n    path: 'record/cashin',\n    canActivate: [AuthLoaderGuard],\n    component: CashInComponent\n  },\n  {\n    path: 'record/cashout',\n    canActivate: [AuthLoaderGuard],\n    component: CashOutComponent\n  },\n  {\n    path: 'reports/loaders-transactions',\n    canActivate: [AuthGuard],\n    component: LoadersTransactionsComponent\n  },\n  {\n    path: 'reports/my-transactions',\n    canActivate: [AuthLoaderGuard],\n    component: MyTransactionsComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DEFAULT_INTERRUPTSOURCES, Idle } from '@ng-idle/core';\nimport { Keepalive } from '@ng-idle/keepalive';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { GlobalService } from './shared/global.service';\nimport { UserService } from './shared/user.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  idleState = 'Not started.';\n  timedOut = false;\n  lastPing?: Date = null;\n  timeOutWarning = false;\n  title = 'CasinoMS-App';\n\n  constructor(public globalService: GlobalService, private userService: UserService, private router: Router, private ngxService: NgxUiLoaderService,\n    private idle: Idle, private keepalive: Keepalive, private toastr: ToastrService) {\n    // sets an idle timeout of 10 minutes, for testing purposes.\n    idle.setIdle(600); //600\n    // sets a timeout period of 30 seconds. after 30 seconds of inactivity, the user will be considered timed out.\n    idle.setTimeout(30); //30\n    // sets the default interrupts, in this case, things like clicks, scrolls, touches to the document\n    idle.setInterrupts(DEFAULT_INTERRUPTSOURCES);\n\n    idle.onIdleEnd.subscribe(() => {\n      this.toastr.info(\"Welcome Back! Please don't leave your account unattended.\", \"RESUME ACTIVITY\");\n      this.reset();\n    });\n\n    idle.onTimeout.subscribe(() => {\n      this.toastr.info(\"You're now logged out. Thank you for using Casino MS.\", \"AUTO LOGOUT\");\n      this.timedOut = true;\n      this.onLogout();\n    });\n\n    idle.onIdleStart.subscribe(() => {\n      this.toastr.warning(\"System's been idle for 10mins. You'll be logged out after 30 seconds if there's still no activity.\", \"AUTO LOGOUT\");\n    });\n\n    idle.onTimeoutWarning.subscribe((countdown) => {\n      this.timeOutWarning = true;\n      this.idleState = 'You will logged out in ' + countdown + ' seconds!'\n      console.log(this.idleState);\n    });\n\n    // sets the ping interval to 15 seconds\n    keepalive.interval(15);\n\n    keepalive.onPing.subscribe(() => this.lastPing = new Date());\n\n    this.globalService.getUserLoggedIn().subscribe(userLoggedIn => {\n      if (userLoggedIn) {\n        idle.watch()\n        this.timedOut = false;\n      } else {\n        idle.stop();\n      }\n    })\n  }\n\n  reset() {\n    this.idle.watch();\n    this.idleState = 'Started.';\n    this.timedOut = false;\n    this.timeOutWarning = false;\n  }\n\n  onLogout(): void {\n    this.ngxService.start();\n    this.timeOutWarning = false;\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"fullName\");\n    this.globalService.setUserLoggedIn(false);\n    this.router.navigateByUrl('/user/login');\n    this.ngxService.stop();\n  }\n}\n","<div>\r\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\" *ngIf=\"globalService.isAuthenticated()\">\r\n        <a class=\" navbar-brand text-uppercase font-weight-light d-flex align-items-center header-font margin-left-sm\" [routerLink]=\"[ '/home']\">\r\n            <img class=\"align-self-center mr-3 nav-image\" src=\"\\assets\\images\\iconfinder_Gambler_3525383.png\" alt=\"Generic placeholder image\"> CASINO MS\r\n        </a>\r\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div class=\"collapse navbar-collapse margin-left-sm\" id=\"navbarNavDropdown\">\r\n            <ul class=\"navbar-nav\">\r\n                <!-- Home -->\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link text-uppercase\" data-toggle=\"tab\" [routerLink]=\"[ '/home']\">Home <span class=\"sr-only\">(current)</span></a>\r\n                </li>\r\n\r\n                <!-- Record -->\r\n                <li *ngIf=\"globalService.isAuthenticated() && globalService.isLoaderAuthenticated()\" class=\"nav-item dropdown text-uppercase\">\r\n                    <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Record</a>\r\n                    <div class=\"dropdown-menu\">\r\n                        <a class=\"dropdown-item d-flex align-content-center\" data-toggle=\"tab\" [routerLink]=\"[ '/record/cashin']\">\r\n                            <img class=\"reverse-margin-left-xsm\" style=\"width: 25px; height: 25px;\" src=\"\\assets\\images\\cash-in-icon.png\" alt=\"Generic placeholder image\">\r\n                            <span class=\"margin-left-sm\"> Cash - In </span>\r\n                        </a>\r\n                        <a class=\"dropdown-item\" data-toggle=\"tab\" [routerLink]=\"[ '/record/cashout']\">\r\n                            <img style=\"width: 20px; height: 20px;\" src=\"\\assets\\images\\cash-out-icon.png\" alt=\"Generic placeholder image\">\r\n                            <span class=\"margin-left-xsm\"> Cash - Out </span>\r\n                        </a>\r\n                    </div>\r\n                </li>\r\n\r\n                <!-- Reports -->\r\n                <li class=\"nav-item dropdown text-uppercase\">\r\n                    <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Reports</a>\r\n                    <div class=\"dropdown-menu\">\r\n                        <a class=\"dropdown-item d-flex align-content-center\" data-toggle=\"tab\" [routerLink]=\"[ '/reports/loaders-transactions']\">\r\n                            <img style=\"width: 25px; height: 25px;\" src=\"\\assets\\images\\loaders-transactions-icon.png\" alt=\"Generic placeholder image\">\r\n                            <span class=\"margin-left-sm\"> Loaders Transactions </span>\r\n                        </a>\r\n                        <a *ngIf=\"globalService.isAuthenticated() && globalService.isLoaderAuthenticated()\" class=\"dropdown-item\" data-toggle=\"tab\" [routerLink]=\"[ '/reports/my-transactions']\">\r\n                            <img style=\"width: 25px; height: 25px;\" src=\"\\assets\\images\\my-transactions-icon.png\" alt=\"Generic placeholder image\">\r\n                            <span class=\"margin-left-sm\">My Transactions</span> </a>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n        <!-- Authenticated User Dropdown & Customer Orders -->\r\n        <div class=\"margin-right-md dropleft\" *ngIf=\"globalService.isAuthenticated()\">\r\n            <div class=\"nav-item dropdown  text-uppercase\">\r\n                <a class=\"nav-link\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    <img src=\"./assets/images/user-icon.png\" width=\"30\" height=\"30\" class=\"d-inline-block align-top\" alt=\"\" loading=\"lazy\">\r\n                </a>\r\n                <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                    <div class=\"dropdown-item\">\r\n                        <span><i class=\"far fa-user\"></i> </span> <span class=\"margin-left-xsm\"> {{globalService.GetUserFullName()}}</span>\r\n                    </div>\r\n                    <div class=\"dropdown-divider\"></div>\r\n                    <a class=\"dropdown-item\" [routerLink]=\"['/profile']\">\r\n                        <span><i class=\"far fa-id-card\"></i></span> <span class=\"margin-left-xsm\"> Profile </span>\r\n                    </a>\r\n                    <a class=\"dropdown-item\" (click)=\"onLogout()\">\r\n                        <span><i class=\"fas fa-sign-out-alt\"></i> </span> <span class=\"margin-left-xsm\"> Logout </span>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n    <router-outlet></router-outlet>\r\n</div>\r\n\r\n<div class=\"alert custom-alert alert-warning\" role=\"alert\" *ngIf=\"timeOutWarning\">\r\n    <h6>AUTOMATIC LOGOUT</h6>\r\n    <hr>\r\n    <p class=\"card-text\"> {{idleState}}</p>\r\n    <button type=\"button\" class=\"btn btn-outline-warning\" (click)=\"reset()\">Stay Logged In</button>\r\n</div>\r\n\r\n<ngx-ui-loader></ngx-ui-loader>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UserComponent } from './user/user.component';\nimport { RegistrationComponent } from './user/registration/registration.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginComponent } from './user/login/login.component';\nimport { ToastrModule } from 'ngx-toastr';\nimport { HomeComponent } from './home/home.component';\nimport { ReportsComponent } from './reports/reports.component';\nimport { CashInComponent } from './record/cash-in/cash-in.component';\nimport { CashOutComponent } from './record/cash-out/cash-out.component';\nimport { RecordComponent } from './record/record.component';\nimport { LoadersTransactionsComponent } from './reports/loaders-transactions/loaders-transactions.component';\nimport { MyTransactionsComponent } from './reports/my-transactions/my-transactions.component';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { SearchFilterPipe } from './shared/pipes/search-filter.pipe';\nimport { ExcelService } from './shared/excel.service';\nimport { NgxUiLoaderConfig, NgxUiLoaderModule } from 'ngx-ui-loader';\nimport { NgIdleKeepaliveModule } from '@ng-idle/keepalive';\nimport { MomentModule } from 'angular2-moment'; \n\nconst customUiLoader: NgxUiLoaderConfig =\n{\n  \"bgsColor\": \"white\",\n  \"bgsOpacity\": 0.5,\n  \"bgsPosition\": \"bottom-right\",\n  \"bgsSize\": 60,\n  \"bgsType\": \"ball-spin-clockwise\",\n  \"blur\": 5,\n  \"delay\": 0,\n  \"fastFadeOut\": true,\n  \"fgsColor\": \"white\",\n  \"fgsPosition\": \"center-center\",\n  \"fgsSize\": 80,\n  \"fgsType\": \"folding-cube\",\n  \"gap\": 24,\n  \"logoPosition\": \"center-center\",\n  \"logoSize\": 120,\n  \"logoUrl\": \"\",\n  \"masterLoaderId\": \"master\",\n  \"overlayBorderRadius\": \"0\",\n  \"overlayColor\": \"rgba(40, 40, 40, 0.8)\",\n  \"pbColor\": \"white\",\n  \"pbDirection\": \"ltr\",\n  \"pbThickness\": 3,\n  \"hasProgressBar\": true,\n  \"text\": \"\",\n  \"textColor\": \"#FFFFFF\",\n  \"textPosition\": \"center-center\",\n  \"maxTime\": -1,\n  \"minTime\": 300\n}\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    RegistrationComponent,\n    LoginComponent,\n    HomeComponent,\n    RecordComponent,\n    ReportsComponent,\n    CashInComponent,\n    CashOutComponent,\n    LoadersTransactionsComponent,\n    MyTransactionsComponent,\n    SearchFilterPipe,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    NgxPaginationModule,\n    FormsModule,\n    NgxUiLoaderModule.forRoot(customUiLoader),\n    NgIdleKeepaliveModule.forRoot(),\n    MomentModule,\n  ],\n  providers: [ExcelService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { GlobalService } from '../shared/global.service';\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\n\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private router: Router, private globalService: GlobalService) { }\r\n\r\n    canActivate(\r\n        next: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot): boolean {\r\n        if (this.globalService.isAuthenticated()) {\r\n            return true;\r\n        }\r\n        else {\r\n            this.router.navigate(['/user/login']);\r\n            return false;\r\n        }\r\n    };\r\n}\r\n","import { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { GlobalService } from '../shared/global.service';\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\n\r\nexport class AuthLoaderGuard implements CanActivate {\r\n    constructor(private router: Router, private globalService: GlobalService) { }\r\n\r\n    canActivate(\r\n        next: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot): boolean {\r\n        if (this.globalService.isLoaderAuthenticated()) {\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.globalService.isFinancerAuthenticated()) {\r\n                this.router.navigate(['/home']);\r\n            } else {\r\n                this.router.navigate(['/user/login']);\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"home-section\">\n    <div class=\"container-fluid\">\n        <div class=\"jumbotron jumbotron-container\">\n            <h1 class=\"display-4\">Welcome to Casino Management System!</h1>\n            <p class=\"lead\">This system helps users mainly loaders and financers track their transactions to prevent discrepancy. This includes input of cash-in/cash-out transactions and report generation. For suggestions or functionality request please send an e-mail\n                to\n                <a href=\"mailto:jjttechnologies@gmail.com\">jjttechnologies@gmail.com</a>.\n            </p>\n            <hr class=\"my-4\">\n            <p>Dashboard contents will be available on the next version release.</p>\n        </div>\n    </div>\n</section>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { debounceTime } from 'rxjs/operators';\nimport { Constants } from 'src/app/shared/constants';\nimport { ITransactionDetails } from 'src/app/shared/interface/ITransactionDetails';\nimport { IUser } from 'src/app/shared/interface/IUser';\nimport { TransactionService } from 'src/app/shared/transaction.service';\nimport { UserService } from 'src/app/shared/user.service';\n\n@Component({\n  selector: 'app-cash-in',\n  templateUrl: './cash-in.component.html',\n  styleUrls: ['./cash-in.component.scss']\n})\n\nexport class CashInComponent implements OnInit {\n  //#region Properties\n\n  transactionDetailsForm: FormGroup;\n  constants: Constants;\n  transactionTypeMessage: string;\n  playerUserNameMessage: string;\n  referenceNoMessage: string;\n  referenceNoVerificationMessage: string;\n  amountMessage: string;\n  errorMessage: \"\";\n  transactionDetail: ITransactionDetails;\n  loaderList: string[] = [];\n  isCashInForOtherLoader = false;\n  cashInButtonText = \"Cash-In for other Loader\";\n\n  //#endregion\n\n  @Output() isFormDirty: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  private playerUserNameValMessages = {\n    maxlength: \"Player username can't exceed 20 characters.\"\n  }\n\n  private referenceNoValMessages = {\n    required: \"Please enter transaction's reference number.\",\n    maxlength: \"Reference number can't exceed 30 digits.\"\n  }\n\n  private amountValMessages = {\n    required: \"Please enter transaction's amount.\",\n    maxlength: \"Amount can't exceed 20 digits.\",\n    pattern: \"Amount is invalid.\"\n  }\n\n  constructor(private fb: FormBuilder, private toastr: ToastrService, private transactionService: TransactionService, private ngxService: NgxUiLoaderService,\n    private userService: UserService) {\n    this.constants = new Constants();\n  }\n\n  ngOnInit(): void {\n    this.transactionDetailsForm = this.fb.group({\n      transactionType: ['Cash-In'],\n      loaderList: [''],\n      playerUserName: ['', [Validators.maxLength(20)]],\n      referenceNo: ['', [Validators.required, Validators.maxLength(30)]],\n      amount: ['', [Validators.required, Validators.maxLength(20), Validators.pattern(/\\-?\\d*\\.?\\d{1,2}/)]]\n    });\n\n    const playerUserNameControl = this.transactionDetailsForm.get(this.constants.playerUserName);\n    playerUserNameControl.valueChanges.pipe(debounceTime(1000)).subscribe(\n      value => this.setMessage(playerUserNameControl, this.constants.playerUserName)\n    );\n\n    const referenceNoControl = this.transactionDetailsForm.get(this.constants.referenceNo);\n    referenceNoControl.valueChanges.pipe(debounceTime(1000)).subscribe(\n      value => {\n        this.setMessage(referenceNoControl, this.constants.referenceNo);\n        this.verifyReferenceNumber(value)\n      });\n\n    const amountControl = this.transactionDetailsForm.get(this.constants.amount);\n    amountControl.valueChanges.pipe(debounceTime(1000)).subscribe(\n      value => this.setMessage(amountControl, this.constants.amount)\n    );\n\n    this.transactionDetailsForm.valueChanges.subscribe(\n      value => this.isFormDirty.emit(true)\n    );\n\n    this.userService.getAllLoaderUsersByTeam().subscribe(\n      (data) => {\n        (<Array<IUser>>data).forEach(user => {\n          this.loaderList.push(user.alias);\n        })\n      }\n    );\n  }\n\n  verifyReferenceNumber(value: string): any {\n    this.transactionService.getTransactionDetailsByReferenceNo(value).subscribe({\n      next: transactionDetail => this.referenceNumberChecker(transactionDetail),\n      error: err => this.errorMessage = err\n    });\n  }\n\n  referenceNumberChecker(transactionDetail: ITransactionDetails) {\n    this.referenceNoVerificationMessage = null;\n    if (transactionDetail != null && transactionDetail.referenceNo != null) {\n      this.referenceNoVerificationMessage = \"This reference number is already recorded. Please verify with the player.\"\n    }\n  }\n\n  setMessage(c: AbstractControl, validationType: string): void {\n    if (validationType == this.constants.playerUserName) {\n      this.playerUserNameMessage = \"\";\n      if ((c.touched || c.dirty) && c.errors) {\n        this.playerUserNameMessage = Object.keys(c.errors).map(\n          key => this.playerUserNameValMessages[key]).join(' ');\n      }\n    } else if (validationType == this.constants.referenceNo) {\n      this.referenceNoMessage = \"\";\n      if ((c.touched || c.dirty) && c.errors) {\n        this.referenceNoMessage = Object.keys(c.errors).map(\n          key => this.referenceNoValMessages[key]).join(' ');\n      }\n    } else if (validationType == this.constants.amount) {\n      this.amountMessage = \"\";\n      if ((c.touched || c.dirty) && c.errors) {\n        this.amountMessage = Object.keys(c.errors).map(\n          key => this.amountValMessages[key]).join(' ');\n      }\n    }\n  }\n\n  setTransactionDetailsValue(transactionDetailsForm: FormGroup): ITransactionDetails {\n    return {\n      id: \"\",\n      transactionId: \"\",\n      transactionType: transactionDetailsForm.get(\"transactionType\").value,\n      playerUserName: transactionDetailsForm.get(\"playerUserName\").value,\n      referenceNo: transactionDetailsForm.get(\"referenceNo\").value,\n      amount: transactionDetailsForm.get(\"amount\").value,\n      submittedBy: transactionDetailsForm.get(\"loaderList\").value,\n      submittedDate: \"\",\n      fullName: \"\",\n      userName: \"\",\n      userId: \"\"\n    };\n  }\n\n  setCashInForOtherLoader(): any {\n    if (!this.isCashInForOtherLoader) {\n      this.isCashInForOtherLoader = true;\n      this.cashInButtonText = \"Cash-In using my Account\";\n    } else {\n      this.isCashInForOtherLoader = false;\n      this.cashInButtonText = \"Cash-In for other Loader\";\n    }\n  }\n\n  submitTransactionDetailsForm(): void {\n    if (this.isCashInForOtherLoader &&\n      (this.transactionDetailsForm.get(\"loaderList\").value == null || this.transactionDetailsForm.get(\"loaderList\").value == \"\")) {\n      this.toastr.error(\"Please choose another loader.\", \"CASH-IN TRANSACTION\");\n    }\n    else {\n      this.ngxService.start();\n      if (this.transactionDetailsForm.valid) {\n        if (this.transactionDetailsForm.dirty) {\n          this.transactionService.submitTransactionDetails(this.setTransactionDetailsValue(this.transactionDetailsForm)).subscribe({\n            next: () => this.onSaveComplete(),\n            error: err => this.errorMessage = err\n          })\n        }\n      }\n    }\n  }\n\n  onSaveComplete(): void {\n    this.isCashInForOtherLoader = false;\n    this.transactionDetailsForm.reset();\n    this.transactionDetailsForm.get(\"transactionType\").setValue(\"Cash-In\");\n    this.isFormDirty.emit(false)\n    this.toastr.success(\"Transaction submitted successfully.\", \"CASH-IN TRANSACTION\");\n    this.ngxService.stop();\n  }\n\n  resetForm(form: FormGroup) {\n    this.isCashInForOtherLoader = false;\n    form.reset();\n    form.get(\"transactionType\").setValue(\"Cash-In\");\n  }\n}\n","<div class=\"cash-in-section\">\n    <div class=\"container margin-top-lg cash-inout-container\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title text-uppercase d-flex align-items-center\">\n                    <img class=\"align-self-center mr-3\" style=\"width: 70px; height: 70px;\" src=\"\\assets\\images\\cash-in-icon.png\" alt=\"Generic placeholder image\"> Cash - In\n                </h5>\n                <h6 class=\"card-subtitle mb-2 text-muted\">Please fill-up all the necessary details.</h6>\n                <div class=\"row margin-top-md\">\n                    <div class=\"col\">\n                        <form (ngSubmit)=\"submitTransactionDetailsForm()\" [formGroup]=\"transactionDetailsForm\">\n                            <!-- Cash-In for other Loader -->\n                            <div class=\"row margin-top-sm\">\n                                <div [ngClass]=\"{'col-md-12 margin-bottom-sm': !isCashInForOtherLoader, 'col-md-6 margin-bottom-md': isCashInForOtherLoader}\">\n                                    <button type=\"button\" (click)=\"setCashInForOtherLoader()\" class=\"btn btn-outline-dark full-width\">\n                                        <i [ngClass]=\"{'fa fa-people-arrows': !isCashInForOtherLoader, 'fas fa-arrow-circle-left': isCashInForOtherLoader}\"></i> {{cashInButtonText}}\n                                    </button>\n                                </div>\n                                <div class=\"col-md-6\" *ngIf=\"isCashInForOtherLoader\">\n                                    <div class=\"form-group\">\n                                        <div class=\"input-group\">\n                                            <div class=\"input-group-prepend\">\n                                                <span class=\"input-group-text\"><i class=\"fa fa-id-badge margin-right-xsm\"></i></span>\n                                            </div>\n                                            <select class=\"custom-select\" formControlName=\"loaderList\" id=\"LoaderList\">\n                                                    <option value=\"\" defaultValue disabled>Please choose another loader *</option>\n                                                    <option *ngFor=\"let loader of loaderList; let i = index\" [value]=\"loader\">\n                                                        {{loader}}\n                                                    </option>\n                                                </select>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <hr>\n\n                            <!-- Transaction Type -->\n                            <div class=\"row margin-top-md\">\n                                <div class=\"col\">\n                                    <div class=\"form-group\">\n                                        <div class=\"input-group\">\n                                            <div class=\"input-group-prepend\">\n                                                <span class=\"input-group-text\"><i class=\"fas fa-cash-register\"></i></span>\n                                            </div>\n                                            <input id=\"TransactionTypeId\" class=\"form-control\" placeholder=\"Transaction Type *\" formControlName=\"transactionType\" type=\"text\" disabled>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <!-- Player Username & Reference No. -->\n                            <div class=\"row margin-top-sm\">\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <div class=\"input-group\">\n                                            <div class=\"input-group-prepend\">\n                                                <span class=\"input-group-text\"><i class=\"fa fa-user margin-right-xsm\"></i></span>\n                                            </div>\n                                            <input id=\"PlayerUserNameId\" class=\"form-control\" placeholder=\"Player Username (optional)\" formControlName=\"playerUserName\" type=\"text\" [ngClass]=\"{ 'is-invalid': playerUserNameMessage, 'is-valid': !playerUserNameMessage\n                                                    && transactionDetailsForm.get( 'playerUserName').touched && transactionDetailsForm.get( 'playerUserName').valid , '':transactionDetailsForm.get( 'playerUserName').untouched}\">\n                                            <span class=\"invalid-feedback\">\n                                            {{playerUserNameMessage}}\n                                        </span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <div class=\"input-group\">\n                                            <div class=\"input-group-prepend\">\n                                                <span class=\"input-group-text\"><i class=\"fa fa-barcode\"></i></span>\n                                            </div>\n                                            <input id=\"ReferenceNoId\" class=\"form-control\" placeholder=\"Reference No. *\" formControlName=\"referenceNo\" type=\"text\" [ngClass]=\"{'is-invalid': referenceNoMessage || referenceNoVerificationMessage, 'is-valid': (!referenceNoMessage || !referenceNoVerificationMessage) && transactionDetailsForm.get('referenceNo').touched && transactionDetailsForm.get('referenceNo').valid , '':transactionDetailsForm.get('referenceNo').untouched}\">\n                                            <span class=\"invalid-feedback\">\n                                            {{referenceNoMessage}} \n                                            {{referenceNoVerificationMessage}}\n                                        </span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <!-- Amount -->\n                            <div class=\"row margin-top-sm\">\n                                <div class=\"col\">\n                                    <div class=\"form-group\">\n                                        <div class=\"input-group\">\n                                            <div class=\"input-group-prepend\">\n                                                <span class=\"input-group-text\"><i class=\"fa fa-money-bill\"></i></span>\n                                            </div>\n                                            <input id=\"AmountId\" class=\"form-control\" placeholder=\"Amount *\" formControlName=\"amount\" type=\"number\" [ngClass]=\"{ 'is-invalid': amountMessage, 'is-valid': !amountMessage\n                                                    && transactionDetailsForm.get('amount').touched && transactionDetailsForm.get('amount').valid , '':transactionDetailsForm.get('amount').untouched}\">\n                                            <span class=\"invalid-feedback\">\n                                            {{amountMessage}}\n                                        </span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <hr>\n                            <div class=\"row d-flex justify-content-center\">\n                                <div class=\"col-lg-4 margin-top-md\">\n                                    <button type=\"submit\" class=\"btn btn-outline-success full-width\" [disabled]=\"!transactionDetailsForm.valid\">Submit</button>\n                                </div>\n                                <div class=\"col-lg-4 margin-top-md\">\n                                    <button type=\"button\" class=\"btn btn-outline-danger full-width\" (click)=\"resetForm(transactionDetailsForm)\">Reset</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { debounceTime } from 'rxjs/operators';\nimport { Constants } from 'src/app/shared/constants';\nimport { ITransactionDetails } from 'src/app/shared/interface/ITransactionDetails';\nimport { IUser } from 'src/app/shared/interface/IUser';\nimport { TransactionService } from 'src/app/shared/transaction.service';\nimport { UserService } from 'src/app/shared/user.service';\n\n@Component({\n  selector: 'app-cash-out',\n  templateUrl: './cash-out.component.html',\n  styleUrls: ['./cash-out.component.scss']\n})\nexport class CashOutComponent implements OnInit {\n  //#region Properties\n\n  transactionDetailsForm: FormGroup;\n  constants: Constants;\n  transactionTypeMessage: string;\n  playerUserNameMessage: string;\n  referenceNoMessage: string;\n  referenceNoVerificationMessage: string;\n  amountMessage: string;\n  errorMessage: \"\";\n  transactionDetail: ITransactionDetails;\n  loaderList: string[] = [];\n  isCashOutForOtherLoader = false;\n  cashOutButtonText = \"Cash-Out for other Loader\";\n\n  //#endregion\n\n  @Output() isFormDirty: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  private playerUserNameValMessages = {\n    required: \"Please enter your player username.\",\n    maxlength: \"Player username can't exceed 20 characters.\"\n  }\n\n  private referenceNoValMessages = {\n    required: \"Please enter transaction's reference number.\",\n    maxlength: \"Reference number can't exceed 30 digits.\"\n  }\n\n  private amountValMessages = {\n    required: \"Please enter transaction's amount.\",\n    maxlength: \"Amount can't exceed 20 digits.\",\n    pattern: \"Amount is invalid.\"\n  }\n\n  constructor(private fb: FormBuilder, private toastr: ToastrService, private transactionService: TransactionService, private ngxService: NgxUiLoaderService,\n    private userService: UserService) {\n    this.constants = new Constants();\n  }\n\n  ngOnInit(): void {\n    this.transactionDetailsForm = this.fb.group({\n      transactionType: ['Cash-Out'],\n      loaderList: [''],\n      playerUserName: ['', [Validators.maxLength(20)]],\n      referenceNo: ['', [Validators.required, Validators.maxLength(30)]],\n      amount: ['', [Validators.required, Validators.maxLength(20), Validators.pattern(/\\-?\\d*\\.?\\d{1,2}/)]]\n    });\n\n    const playerUserNameControl = this.transactionDetailsForm.get(this.constants.playerUserName);\n    playerUserNameControl.valueChanges.pipe(debounceTime(1000)).subscribe(\n      value => this.setMessage(playerUserNameControl, this.constants.playerUserName)\n    );\n\n    const referenceNoControl = this.transactionDetailsForm.get(this.constants.referenceNo);\n    referenceNoControl.valueChanges.pipe(debounceTime(1000)).subscribe(\n      value => {\n        this.setMessage(referenceNoControl, this.constants.referenceNo);\n        this.verifyReferenceNumber(value)\n      });\n\n    const amountControl = this.transactionDetailsForm.get(this.constants.amount);\n    amountControl.valueChanges.pipe(debounceTime(1000)).subscribe(\n      value => this.setMessage(amountControl, this.constants.amount)\n    );\n\n    this.transactionDetailsForm.valueChanges.subscribe(\n      value => this.isFormDirty.emit(true)\n    );\n\n    this.userService.getAllLoaderUsersByTeam().subscribe(\n      (data) => {\n        (<Array<IUser>>data).forEach(user => {\n          this.loaderList.push(user.alias);\n        })\n      }\n    );\n  }\n\n  verifyReferenceNumber(value: string): any {\n    this.transactionService.getTransactionDetailsByReferenceNo(value).subscribe({\n      next: transactionDetail => this.referenceNumberChecker(transactionDetail),\n      error: err => this.errorMessage = err\n    });\n  }\n\n  referenceNumberChecker(transactionDetail: ITransactionDetails) {\n    this.referenceNoVerificationMessage = null;\n    if (transactionDetail != null && transactionDetail.referenceNo != null) {\n      this.referenceNoVerificationMessage = \"This reference number is already recorded. Please double check.\"\n    }\n  }\n\n  setMessage(c: AbstractControl, validationType: string): void {\n    if (validationType == this.constants.playerUserName) {\n      this.playerUserNameMessage = \"\";\n      if ((c.touched || c.dirty) && c.errors) {\n        this.playerUserNameMessage = Object.keys(c.errors).map(\n          key => this.playerUserNameValMessages[key]).join(' ');\n      }\n    } else if (validationType == this.constants.referenceNo) {\n      this.referenceNoMessage = \"\";\n      if ((c.touched || c.dirty) && c.errors) {\n        this.referenceNoMessage = Object.keys(c.errors).map(\n          key => this.referenceNoValMessages[key]).join(' ');\n      }\n    } else if (validationType == this.constants.amount) {\n      this.amountMessage = \"\";\n      if ((c.touched || c.dirty) && c.errors) {\n        this.amountMessage = Object.keys(c.errors).map(\n          key => this.amountValMessages[key]).join(' ');\n      }\n    }\n  }\n\n  setTransactionDetailsValue(transactionDetailsForm: FormGroup): ITransactionDetails {\n    return {\n      id: \"\",\n      transactionId: \"\",\n      transactionType: transactionDetailsForm.get(\"transactionType\").value,\n      playerUserName: transactionDetailsForm.get(\"playerUserName\").value,\n      referenceNo: transactionDetailsForm.get(\"referenceNo\").value,\n      amount: transactionDetailsForm.get(\"amount\").value,\n      submittedBy: transactionDetailsForm.get(\"loaderList\").value,\n      submittedDate: \"\",\n      fullName: \"\",\n      userName: \"\",\n      userId: \"\"\n    };\n  }\n\n  setCashOutForOtherLoader(): any {\n    if (!this.isCashOutForOtherLoader) {\n      this.isCashOutForOtherLoader = true;\n      this.cashOutButtonText = \"Cash-Out using my Account\";\n    } else {\n      this.isCashOutForOtherLoader = false;\n      this.cashOutButtonText = \"Cash-Out for other Loader\";\n    }\n  }\n\n  submitTransactionDetailsForm(): void {\n    if (this.isCashOutForOtherLoader &&\n      (this.transactionDetailsForm.get(\"loaderList\").value == null || this.transactionDetailsForm.get(\"loaderList\").value == \"\")) {\n      this.toastr.error(\"Please choose another loader.\", \"CASH-OUT TRANSACTION\");\n    }\n    else {\n      this.ngxService.start();\n      if (this.transactionDetailsForm.valid) {\n        if (this.transactionDetailsForm.dirty) {\n          this.transactionService.submitTransactionDetails(this.setTransactionDetailsValue(this.transactionDetailsForm)).subscribe({\n            next: () => this.onSaveComplete(),\n            error: err => this.errorMessage = err\n          })\n        }\n      }\n    }\n  }\n\n  onSaveComplete(): void {\n    this.transactionDetailsForm.reset();\n    this.transactionDetailsForm.get(\"transactionType\").setValue(\"Cash-Out\");\n    this.isFormDirty.emit(false)\n    this.toastr.success(\"Transaction submitted successfully.\", \"CASH-OUT TRANSACTION\");\n    this.ngxService.stop();\n  }\n\n  resetForm(form: FormGroup) {\n    form.reset();\n    form.get(\"transactionType\").setValue(\"Cash-Out\");\n  }\n}\n","<div class=\"cash-out-section\">\n    <div class=\"container margin-top-lg cash-inout-container\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title text-uppercase d-flex align-items-center\">\n                    <img class=\"align-self-center mr-3\" style=\"width: 70px; height: 70px;\" src=\"\\assets\\images\\cash-out-icon.png\" alt=\"Generic placeholder image\"> Cash - Out\n                </h5>\n                <h6 class=\"card-subtitle mb-2 text-muted margin-top-md\">Please fill-up all the necessary details.</h6>\n\n                <div class=\"row margin-top-md\">\n                    <div class=\"col\">\n                        <form (ngSubmit)=\"submitTransactionDetailsForm()\" [formGroup]=\"transactionDetailsForm\">\n                            <!-- Cash-Out for other Loader -->\n                            <div class=\"row margin-top-sm\">\n                                <div [ngClass]=\"{'col-md-12 margin-bottom-sm': !isCashOutForOtherLoader, 'col-md-6 margin-bottom-md': isCashOutForOtherLoader}\">\n                                    <button type=\"button\" (click)=\"setCashOutForOtherLoader()\" class=\"btn btn-outline-dark full-width\">\n                                        <i [ngClass]=\"{'fa fa-people-arrows': !isCashOutForOtherLoader, 'fas fa-arrow-circle-left': isCashOutForOtherLoader}\"></i> {{cashOutButtonText}}\n                                    </button>\n                                </div>\n                                <div class=\"col-md-6\" *ngIf=\"isCashOutForOtherLoader\">\n                                    <div class=\"form-group\">\n                                        <div class=\"input-group\">\n                                            <div class=\"input-group-prepend\">\n                                                <span class=\"input-group-text\"><i class=\"fa fa-id-badge margin-right-xsm\"></i></span>\n                                            </div>\n                                            <select class=\"custom-select\" formControlName=\"loaderList\" id=\"LoaderList\">\n                                                    <option value=\"\" defaultValue disabled>Please choose another loader *</option>\n                                                    <option *ngFor=\"let loader of loaderList; let i = index\" [value]=\"loader\">\n                                                        {{loader}}\n                                                    </option>\n                                                </select>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <hr>\n\n                            <!-- Transaction Type -->\n                            <div class=\"row margin-top-md\">\n                                <div class=\"col\">\n                                    <div class=\"form-group\">\n                                        <div class=\"input-group\">\n                                            <div class=\"input-group-prepend\">\n                                                <span class=\"input-group-text\"><i class=\"fas fa-cash-register\"></i></span>\n                                            </div>\n                                            <input id=\"TransactionTypeId\" class=\"form-control\" placeholder=\"Transaction Type *\" formControlName=\"transactionType\" type=\"text\" disabled>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <!-- Player Username & Reference No. -->\n                            <div class=\"row margin-top-sm\">\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <div class=\"input-group\">\n                                            <div class=\"input-group-prepend\">\n                                                <span class=\"input-group-text\"><i class=\"fa fa-user margin-right-xsm\"></i></span>\n                                            </div>\n                                            <input id=\"PlayerUserNameId\" class=\"form-control\" placeholder=\"Player Username *\" formControlName=\"playerUserName\" type=\"text\" [ngClass]=\"{ 'is-invalid': playerUserNameMessage, 'is-valid': !playerUserNameMessage\n                                                    && transactionDetailsForm.get( 'playerUserName').touched && transactionDetailsForm.get( 'playerUserName').valid , '':transactionDetailsForm.get( 'playerUserName').untouched}\">\n                                            <span class=\"invalid-feedback\">\n                                            {{playerUserNameMessage}}\n                                        </span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <div class=\"input-group\">\n                                            <div class=\"input-group-prepend\">\n                                                <span class=\"input-group-text\"><i class=\"fa fa-barcode\"></i></span>\n                                            </div>\n                                            <input id=\"ReferenceNoId\" class=\"form-control\" placeholder=\"Reference No. *\" formControlName=\"referenceNo\" type=\"text\" [ngClass]=\"{ 'is-invalid': referenceNoMessage || referenceNoVerificationMessage, 'is-valid': (!referenceNoMessage || !referenceNoVerificationMessage) && transactionDetailsForm.get('referenceNo').touched && transactionDetailsForm.get('referenceNo').valid , '':transactionDetailsForm.get('referenceNo').untouched}\">\n                                            <span class=\"invalid-feedback\">\n                                            {{referenceNoMessage}}\n                                            {{referenceNoVerificationMessage}}\n                                        </span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <!-- Amount -->\n                            <div class=\"row margin-top-sm\">\n                                <div class=\"col\">\n                                    <div class=\"form-group\">\n                                        <div class=\"input-group\">\n                                            <div class=\"input-group-prepend\">\n                                                <span class=\"input-group-text\"><i class=\"fa fa-money-bill\"></i></span>\n                                            </div>\n                                            <input id=\"AmountId\" class=\"form-control\" placeholder=\"Amount *\" formControlName=\"amount\" type=\"number\" [ngClass]=\"{ 'is-invalid': amountMessage, 'is-valid': !amountMessage\n                                                    && transactionDetailsForm.get('amount').touched && transactionDetailsForm.get('amount').valid , '':transactionDetailsForm.get('amount').untouched}\">\n                                            <span class=\"invalid-feedback\">\n                                            {{amountMessage}}\n                                        </span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <hr>\n                            <div class=\"row d-flex justify-content-center\">\n                                <div class=\"col-lg-4 margin-top-md\">\n                                    <button type=\"submit\" class=\"btn btn-outline-success full-width\" [disabled]=\"!transactionDetailsForm.valid\">Submit</button>\n                                </div>\n                                <div class=\"col-lg-4 margin-top-md\">\n                                    <button type=\"button\" class=\"btn btn-outline-danger full-width\" (click)=\"resetForm(transactionDetailsForm)\">Reset</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-record',\n  templateUrl: './record.component.html'\n})\nexport class RecordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>reports works!</p>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { ITransactionDetails } from 'src/app/shared/interface/ITransactionDetails';\nimport { TransactionService } from 'src/app/shared/transaction.service';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { ToastrService } from 'ngx-toastr';\nimport { ExcelService } from 'src/app/shared/excel.service';\nimport * as XLSX from 'xlsx';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { GlobalService } from 'src/app/shared/global.service';\n\n@Component({\n  selector: 'app-loaders-transactions',\n  templateUrl: './loaders-transactions.component.html',\n  styleUrls: ['./loaders-transactions.component.scss']\n})\nexport class LoadersTransactionsComponent implements OnInit {\n  p: number = 1;\n  transactionDetails: ITransactionDetails[] = []\n  errorMessage: string = '';\n  searchValue: string;\n  showDateInput = false;\n  startDate: Date;\n  endDate: Date;\n  isFilterSuccess: boolean = false;\n  filterAmount = { count: 0 };\n  showSpinner;\n\n  @ViewChild('DataTable') dataTable: ElementRef;\n\n  constructor(private transactionService: TransactionService, private toastr: ToastrService,\n    private excelService: ExcelService, private ngxService: NgxUiLoaderService, public globalService: GlobalService) {\n  }\n\n  ngOnInit(): void {\n    this.showSpinner = true;\n    this.transactionService.getTransactionDetails().subscribe({\n      next: transactionDetails => this.transactionDetails = this.onComplete(transactionDetails),\n      error: err => this.errorMessage = err\n    });\n  }\n\n  toggleDateInput(): any {\n    this.showDateInput = !this.showDateInput;\n  }\n\n  filterByDate(): any {\n    if (!this.startDate || !this.endDate) {\n      this.toastr.error(\"Please fill out the dates to be filtered.\", \"Date Input Error\");\n    }\n    else if (this.startDate > this.endDate) {\n      this.toastr.error(\"End Date can't be greater then Start Date\", \"Date Input Error\");\n      this.startDate = null;\n      this.endDate = null;\n    }\n    else {\n      this.transactionDetails = null;\n      this.showSpinner = true;\n      this.transactionService.getTransactionDetailsByDates(this.startDate, this.endDate).subscribe({\n        next: transactionDetails => this.transactionDetails = this.onFilterComplete(transactionDetails),\n        error: err => this.errorMessage = err\n      });\n    }\n  }\n\n  onComplete(transactionDetails: ITransactionDetails[]): ITransactionDetails[] {\n    this.filterAmount.count = transactionDetails.reduce((sum, current) => sum + current.amount, 0)\n    this.showSpinner = false;\n    return transactionDetails;\n  }\n\n  onFilterComplete(transactionDetails: ITransactionDetails[]): ITransactionDetails[] {\n    this.filterAmount.count = transactionDetails.reduce((sum, current) => sum + current.amount, 0)\n    this.isFilterSuccess = true;\n    this.showSpinner = false;\n    return transactionDetails;\n  }\n\n  resetTransactionDetails(): any {\n    this.transactionDetails = null;\n    this.showSpinner = true;\n    this.startDate = null;\n    this.endDate = null;\n    this.isFilterSuccess = false;\n    this.transactionService.getTransactionDetails().subscribe({\n      next: transactionDetails => this.transactionDetails = this.onComplete(transactionDetails),\n      error: err => this.errorMessage = err\n    });\n  }\n\n  exportAsXLSX(): void {\n    // const ws: XLSX.WorkSheet = XLSX.utils.table_to_sheet(this.dataTable.nativeElement);\n    // const wb: XLSX.WorkBook = XLSX.utils.book_new();\n    // XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n\n    // /* save to file */\n    // XLSX.writeFile(wb, 'Loaders_Transaction.xlsx')\n\n    this.excelService.exportAsExcelFile(this.transactionDetails, 'Loaders_Transaction');\n  }\n}\n","<div class=\"loaders-transaction-section\">\n    <div class=\"container-fluid margin-top-lg loader-transaction-container\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title text-uppercase d-flex align-items-center\">\n                    <img class=\"align-self-center mr-3\" style=\"width: 70px; height: 70px;\" src=\"\\assets\\images\\loaders-transactions-icon.png\" alt=\"Generic placeholder image\"> Loaders Transactions\n                </h5>\n                <h6 class=\"card-subtitle mb-2 text-muted margin-top-md\">All transactions by loaders can be seen here. Search for reference number, player name, etc.</h6>\n                <div class=\"row margin-top-md\">\n                    <div class=\"col-lg-9\">\n                        <div class=\"row d-flex justify-content-start\">\n                            <div class=\"col-lg-2 margin-top-md\">\n                                <button type=\"button\" class=\"btn btn-info text-uppercase full-width\" (click)='toggleDateInput()'><i class=\"fa fa-search\" ></i> Date Filter</button>\n                            </div>\n                            <div *ngIf=\"showDateInput\" class=\"col-lg-3 margin-top-md\">\n                                <input [(ngModel)]=\"startDate\" class=\"form-control\" type=\"datetime-local\">\n                            </div>\n                            <span class=\"margin-top-md divider-padding\" *ngIf=\"showDateInput\">-</span>\n                            <div *ngIf=\"showDateInput\" class=\"col-lg-3 margin-top-md\">\n                                <input [(ngModel)]=\"endDate\" class=\"form-control\" type=\"datetime-local\">\n                            </div>\n                            <div *ngIf=\"showDateInput\" class=\"col-lg-3 margin-top-md\">\n                                <button *ngIf=\"showDateInput && !isFilterSuccess\" type=\"button\" class=\"btn btn-info text-uppercase full-width\" (click)='filterByDate()' [disabled]=\"startDate == null || endDate == null\">\n                                    <i class=\"fa fa-check\"></i> Submit\n                                </button>\n                                <button *ngIf=\"showDateInput && isFilterSuccess\" type=\"button\" class=\"btn btn-danger text-uppercase full-width\" (click)='resetTransactionDetails()'>\n                                    <i class=\"fas fa-sync-alt\"></i> Reset\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-3 margin-top-md\">\n                        <div class=\"input-group\">\n                            <input id=\"SearchId\" [(ngModel)]=\"searchValue\" class=\"form-control\" placeholder=\"SEARCH\" type=\"text\">\n                            <div class=\"input-group-append\">\n                                <span class=\"input-group-text\"><i class=\"fa fa-search\"></i></span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row margin-top-md\">\n                    <div class=\"col table-responsive\" #DataTable>\n                        <table class=\"table table-hover\">\n                            <thead>\n                                <tr class=\"text-uppercase\">\n                                    <th scope=\"col\">Id</th>\n                                    <th scope=\"col\">Submitted By</th>\n                                    <th scope=\"col\">Full Name</th>\n                                    <th scope=\"col\">Transaction Type</th>\n                                    <th scope=\"col\">Reference No.</th>\n                                    <th scope=\"col\">Amount</th>\n                                    <th scope=\"col\">Player</th>\n                                    <th scope=\"col\">Date</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr #myVar *ngFor='let detail of transactionDetails | searchFilter : searchValue : filterAmount | paginate: { itemsPerPage: 30, currentPage: p }'>\n                                    <td>{{ detail.id }}</td>\n                                    <td>{{ detail.submittedBy }}</td>\n                                    <td>{{ detail.fullName }}</td>\n                                    <td>{{ detail.transactionType }}</td>\n                                    <td>{{ detail.referenceNo }}</td>\n                                    <td>{{ detail.amount }}</td>\n                                    <td>{{ detail.playerUserName }}</td>\n                                    <td>{{ detail.submittedDate }}</td>\n                                </tr>\n                                <tr *ngIf='transactionDetails.length == 0 && !showSpinner'>\n                                    <td colspan=\"8\">No records found</td>\n                                </tr>\n                                <tr class=\"fa-3x\" *ngIf=\"showSpinner\">\n                                    <td colspan=\"8\"><i class=\"fas fa-spinner fa-pulse\"></i></td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <div class=\"row margin-top-sm\">\n                    <div class=\"col offset-lg-9 margin-top-md\">\n                        <div class=\"input-group\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\"><i class=\"fas fa-money-bill-wave\"></i></span>\n                            </div>\n                            <input id=\"AmountId\" [(ngModel)]=\"filterAmount.count\" class=\"form-control\" type=\"text\" disabled>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-1 margin-top-md\" *ngIf=\"globalService.isFinancerAuthenticated()\">\n                        <button type=\"button\" class=\"btn btn-info text-uppercase full-width\" (click)='exportAsXLSX()'><i class=\"fas fa-file-excel\"></i></button>\n                    </div>\n                </div>\n                <div class=\"row margin-top-md\">\n                    <div class=\"col d-flex justify-content-center\">\n                        <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { ITransactionDetails } from 'src/app/shared/interface/ITransactionDetails';\nimport { TransactionService } from 'src/app/shared/transaction.service';\n\n@Component({\n  selector: 'app-my-transactions',\n  templateUrl: './my-transactions.component.html',\n  styleUrls: ['./my-transactions.component.scss']\n})\nexport class MyTransactionsComponent implements OnInit {\n  p: number = 1;\n  transactionDetails: ITransactionDetails[] = []\n  errorMessage: string = '';\n  searchValue: string;\n  showDateInput = false;\n  startDate: Date;\n  endDate: Date;\n  isFilterSuccess: boolean = false;\n  filterAmount = { count: 0 };\n  showSpinner;\n\n\n  constructor(private transactionService: TransactionService, private toastr: ToastrService, private ngxService: NgxUiLoaderService) { }\n\n  ngOnInit(): void {\n    this.showSpinner = true;\n    this.transactionService.getTransactionDetailsByUserId().subscribe({\n      next: transactionDetails => this.transactionDetails = this.onComplete(transactionDetails),\n        error: err => this.errorMessage = err\n    });\n  }\n\n  toggleDateInput(): any {\n    this.showDateInput = !this.showDateInput;\n  }\n\n  filterByDate(): any {\n    if (!this.startDate || !this.endDate) {\n      this.toastr.error(\"Please fill out the dates to be filtered.\", \"Date Input Error\");\n    }\n    else if (this.startDate > this.endDate) {\n      this.toastr.error(\"End Date can't be greater then Start Date\", \"Date Input Error\");\n      this.startDate = null;\n      this.endDate = null;\n    }\n    else {\n      this.transactionDetails = null;\n      this.showSpinner = true;\n      this.transactionService.getTransactionDetailsByDates(this.startDate, this.endDate).subscribe({\n        next: transactionDetails => this.transactionDetails = this.onFilterComplete(transactionDetails),\n        error: err => this.errorMessage = err\n      });\n    }\n  }\n\n  onComplete(transactionDetails: ITransactionDetails[]): ITransactionDetails[] {\n    this.filterAmount.count = transactionDetails.reduce((sum, current) => sum + current.amount, 0)\n    this.showSpinner = false;\n    return transactionDetails;\n  }\n\n  onFilterComplete(transactionDetails: ITransactionDetails[]): ITransactionDetails[] {\n    this.filterAmount.count = transactionDetails.reduce((sum, current) => sum + current.amount, 0)\n    this.isFilterSuccess = true;\n    this.showSpinner = false;\n    return transactionDetails;\n  }\n\n  resetTransactionDetails(): any {\n    this.transactionDetails = null;\n    this.showSpinner = true;\n    this.startDate = null;\n    this.endDate = null;\n    this.isFilterSuccess = false;\n    this.transactionService.getTransactionDetailsByUserId().subscribe({\n      next: transactionDetails => this.transactionDetails = this.onComplete(transactionDetails),\n      error: err => this.errorMessage = err\n    });\n  }\n\n}\n","<div class=\"my-transaction-section\">\n    <div class=\"container-fluid margin-top-lg padding-left-xlg padding-right-xlg my-transaction-container\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title text-uppercase d-flex align-items-center\">\n                    <img class=\"align-self-center mr-3\" style=\"width: 70px; height: 70px;\" src=\"\\assets\\images\\my-transactions-icon.png\" alt=\"Generic placeholder image\"> My Transactions\n                </h5>\n                <h6 class=\"card-subtitle mb-2 text-muted margin-top-md\">All of your transactions can be seen here. Search for reference number, player name, etc.</h6>\n                <div class=\"row margin-top-md\">\n                    <div class=\"col-lg-9\">\n                        <div class=\"row d-flex justify-content-start\">\n                            <div class=\"col-lg-2 margin-top-md\">\n                                <button type=\"button\" class=\"btn btn-info text-uppercase full-width\" (click)='toggleDateInput()'><i class=\"fa fa-search\" ></i> Date Filter</button>\n                            </div>\n                            <div *ngIf=\"showDateInput\" class=\"col-lg-3 margin-top-md\">\n                                <input [(ngModel)]=\"startDate\" class=\"form-control\" type=\"datetime-local\">\n                            </div>\n                            <span class=\"margin-top-md divider-padding\" *ngIf=\"showDateInput\">-</span>\n                            <div *ngIf=\"showDateInput\" class=\"col-lg-3 margin-top-md\">\n                                <input [(ngModel)]=\"endDate\" class=\"form-control\" type=\"datetime-local\">\n                            </div>\n                            <div *ngIf=\"showDateInput\" class=\"col-lg-3 margin-top-md\">\n                                <button *ngIf=\"showDateInput && !isFilterSuccess\" type=\"button\" class=\"btn btn-info text-uppercase full-width\" (click)='filterByDate()' [disabled]=\"startDate == null || endDate == null\">\n                                    <i class=\"fa fa-check\"></i> Submit\n                                </button>\n                                <button *ngIf=\"showDateInput && isFilterSuccess\" type=\"button\" class=\"btn btn-danger text-uppercase full-width\" (click)='resetTransactionDetails()'>\n                                    <i class=\"fas fa-sync-alt\"></i> Reset\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-3 margin-top-md\">\n                        <div class=\"input-group\">\n                            <input id=\"SearchId\" [(ngModel)]=\"searchValue\" class=\"form-control\" placeholder=\"Search\" type=\"text\">\n                            <div class=\"input-group-append\">\n                                <span class=\"input-group-text\"><i class=\"fa fa-search\"></i></span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row margin-top-md\">\n                    <div class=\"col table-responsive\">\n                        <table class=\"table table-hover\">\n                            <thead>\n                                <tr class=\"text-uppercase\">\n                                    <th scope=\"col\">Id</th>\n                                    <th scope=\"col\">Submitted By</th>\n                                    <th scope=\"col\">Full Name</th>\n                                    <th scope=\"col\">Transaction Type</th>\n                                    <th scope=\"col\">Reference No.</th>\n                                    <th scope=\"col\">Amount</th>\n                                    <th scope=\"col\">Player</th>\n                                    <th scope=\"col\">Date</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr *ngFor='let detail of transactionDetails | searchFilter : searchValue : filterAmount  | paginate: { itemsPerPage: 30, currentPage: p }'>\n                                    <td>{{ detail.id }}</td>\n                                    <td>{{ detail.submittedBy }}</td>\n                                    <td>{{ detail.fullName }}</td>\n                                    <td>{{ detail.transactionType }}</td>\n                                    <td>{{ detail.referenceNo }}</td>\n                                    <td>{{ detail.amount }}</td>\n                                    <td>{{ detail.playerUserName }}</td>\n                                    <td>{{ detail.submittedDate }}</td>\n                                </tr>\n                                <tr *ngIf='transactionDetails.length == 0 && !showSpinner'>\n                                    <td colspan=\"8\">No records found</td>\n                                </tr>\n                                <tr class=\"fa-3x\" *ngIf=\"showSpinner\">\n                                    <td colspan=\"8\"><i class=\"fas fa-spinner fa-pulse\"></i></td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <div class=\"row margin-top-sm\">\n                    <div class=\"col offset-lg-9 margin-top-md\">\n                        <div class=\"input-group\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\"><i class=\"fas fa-money-bill-wave\"></i></span>\n                            </div>\n                            <input id=\"AmountId\" [(ngModel)]=\"filterAmount.count\" class=\"form-control\" type=\"text\" disabled>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row margin-top-sm\">\n                    <div class=\"col d-flex justify-content-center\">\n                        <pagination-controls (pageChange)=\"p = $event\"></pagination-controls>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reports',\n  templateUrl: './reports.component.html',\n  styleUrls: ['./reports.component.scss']\n})\nexport class ReportsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>reports works!</p>","export class Constants {\r\n    firstName: string = 'firstName';\r\n    lastName: string = 'lastName';\r\n    alias: string = 'alias';\r\n    teams: string = 'teams';\r\n    userTypes: string = 'userTypes';\r\n    emailAddress: string = 'emailAddress';\r\n    userName: string = 'userName';\r\n    password: string = 'password';\r\n    confirmPassword: string = 'confirmPassword';\r\n    playerUserName: string = 'playerUserName';\r\n    referenceNo: string = 'referenceNo';\r\n    amount: string = 'amount';\r\n}","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { GlobalService } from './global.service';\r\nimport { ITeams } from './interface/ITeams';\r\nimport { IUserType } from './interface/IUserType';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class DefinitionService {\r\n    private getUserTypesUrl: string = 'api/Definition/GetUserTypes';\r\n    private getTeamsUrl: string = 'api/Definition/GetTeams';\r\n\r\n    constructor(private http: HttpClient, private globalService: GlobalService) {\r\n        this.getUserTypesUrl = globalService.baseUrl() + this.getUserTypesUrl;\r\n        this.getTeamsUrl = globalService.baseUrl() + this.getTeamsUrl;\r\n    }\r\n\r\n    getUserTypes(): Observable<IUserType[]> {\r\n        return this.http.get<IUserType[]>(this.getUserTypesUrl)\r\n          .pipe(\r\n            tap(data => console.log()),\r\n            catchError(this.handleError)\r\n          );\r\n      }\r\n    \r\n      getTeams(): Observable<ITeams[]> {\r\n        return this.http.get<ITeams[]>(this.getTeamsUrl)\r\n          .pipe(\r\n            tap(data => console.log()),\r\n            catchError(this.handleError)\r\n          );\r\n      }\r\n\r\n      private handleError(err: HttpErrorResponse) {\r\n        // in a real world app, we may send the server to some remote logging infrastructure\r\n        // instead of just logging it to the console\r\n        let errorMessage = '';\r\n        if (err.error instanceof ErrorEvent) {\r\n          // A client-side or network error occurred. Handle it accordingly.\r\n          errorMessage = `An error occurred: ${err.error.message}`;\r\n        } else {\r\n          // The backend returned an unsuccessful response code.\r\n          // The response body may contain clues as to what went wrong,\r\n          errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n        }\r\n        console.error(errorMessage);\r\n        return throwError(errorMessage);\r\n      }\r\n}","import { Injectable } from '@angular/core';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\n\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\nconst EXCEL_EXTENSION = '.xlsx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExcelService {\n\n  constructor() { }\n\n  public exportAsExcelFile(json: any[], excelFileName: string): void {\n    \n    const myworksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(json);\n    const myworkbook: XLSX.WorkBook = { Sheets: { 'data': myworksheet }, SheetNames: ['data'] };\n    const excelBuffer: any = XLSX.write(myworkbook, { bookType: 'xlsx', type: 'array' });\n    this.saveAsExcelFile(excelBuffer, excelFileName);\n  }\n\n  private saveAsExcelFile(buffer: any, fileName: string): void {\n    const data: Blob = new Blob([buffer], {\n      type: EXCEL_TYPE\n    });\n    FileSaver.saveAs(data, fileName + '_exported'+ EXCEL_EXTENSION);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\n\r\nexport class GlobalService {\r\n    private userLoggedIn = new Subject<boolean>();\r\n    public currentPage: string;\r\n    public userFullName: string;\r\n\r\n    constructor() {\r\n        this.userLoggedIn.next(false);\r\n        this.userFullName = \"\";\r\n        this.currentPage = \"\";\r\n    }\r\n\r\n    //Authentication Checker\r\n    public isAuthenticated(): boolean {\r\n        var result = false;\r\n        if (localStorage.getItem(\"token\") != null) {\r\n            result = true;\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n    public isFinancerAuthenticated(): boolean {\r\n        var result = false;\r\n\r\n        if (localStorage.getItem(\"token\") != null && localStorage.getItem(\"UserType\") == \"Financer\") {\r\n            result = true;\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n    public isLoaderAuthenticated(): boolean {\r\n        var result = false;\r\n\r\n        if (localStorage.getItem(\"token\") != null && localStorage.getItem(\"UserType\") == \"Loader\") {\r\n            result = true;\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n    public setCurrentPage(page: string): void {\r\n        this.currentPage = page;\r\n    }\r\n\r\n    setUserLoggedIn(userLoggedIn: boolean) {\r\n        this.userLoggedIn.next(userLoggedIn);\r\n    }\r\n\r\n    getUserLoggedIn(): Observable<boolean> {\r\n        return this.userLoggedIn.asObservable();\r\n    }\r\n\r\n    public GetUserFullName(): string {\r\n        return localStorage.getItem(\"fullName\");\r\n    }\r\n\r\n    public baseUrl(): string {\r\n        return ''\r\n        // return 'https://localhost:44393/'\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { ILogin } from './interface/ILogin';\r\nimport { GlobalService } from './global.service';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class LoginService{\r\n    private loginUrl =  'api/Login';\r\n\r\n    constructor(private http: HttpClient, private globalService: GlobalService) { \r\n        this.loginUrl = globalService.baseUrl() + this.loginUrl;\r\n    }\r\n\r\n    loginUser(login: ILogin) {\r\n        const headers = new HttpHeaders({ \"Content-Type\": \"application/json\" });\r\n\r\n        return this.http.post<ILogin>(this.loginUrl, login, { headers })\r\n            .pipe(\r\n                catchError(this.handleError)\r\n            );\r\n    }\r\n\r\n    private handleError(err: HttpErrorResponse) {\r\n        // in a real world app, we may send the server to some remote logging infrastructure\r\n        // instead of just logging it to the console\r\n        let errorMessage = '';\r\n        if (err.error instanceof ErrorEvent) {\r\n            // A client-side or network error occurred. Handle it accordingly.\r\n            errorMessage = `An error occurred: ${err.error.message}`;\r\n        } else {\r\n            // The backend returned an unsuccessful response code.\r\n            // The response body may contain clues as to what went wrong,\r\n            errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n        }\r\n        console.error(errorMessage);\r\n        return throwError(errorMessage);\r\n    }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\nimport { ITransactionDetails } from '../interface/ITransactionDetails';\n\n@Pipe({\n  name: 'searchFilter'\n})\nexport class SearchFilterPipe implements PipeTransform {\n  filteredTransactionDetails: ITransactionDetails[];\n  cashIn: number;\n  cashOut: number;\n\n  transform(transactionDetails: ITransactionDetails[], searchValue: string, filterMetadata): ITransactionDetails[] {\n    if (!transactionDetails || !searchValue) {\n      return transactionDetails;\n    }\n\n    this.filteredTransactionDetails = transactionDetails.filter(transactionDetails =>\n      transactionDetails.submittedBy?.toLocaleLowerCase().includes(searchValue?.toLocaleLowerCase()) ||\n      transactionDetails.playerUserName?.toLocaleLowerCase().includes(searchValue?.toLocaleLowerCase()) ||\n      transactionDetails.transactionType?.toLocaleLowerCase().includes(searchValue?.toLocaleLowerCase()) ||\n      transactionDetails.referenceNo?.toLocaleLowerCase().includes(searchValue?.toLocaleLowerCase()) ||\n      transactionDetails.amount?.toString().includes(searchValue)\n    );\n\n    this.cashIn = this.filteredTransactionDetails.filter(x => x.transactionType == \"Cash-In\").reduce((sum, current) => sum + current.amount, 0);\n    this.cashOut = this.filteredTransactionDetails.filter(x => x.transactionType == \"Cash-Out\").reduce((sum, current) => sum + current.amount, 0);\n    \n    filterMetadata.count = this.cashIn - this.cashOut;\n\n    return this.filteredTransactionDetails;\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpEventType, HttpEvent } from '@angular/common/http';\r\nimport { IUser } from '../shared/interface/IUser';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { GlobalService } from './global.service';\r\nimport { ITransactionDetails } from './interface/ITransactionDetails';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class TransactionService {\r\n    private transactionDetailsUrl = 'api/TransactionDetails';\r\n    private getTransactionDetailsUrl = 'api/TransactionDetails';\r\n    private getTransactionDetailsByUserIdUrl = 'api/TransactionDetails/GetTransactionDetailsByUserId';\r\n    private getTransactionDetailsByDatesUrl = 'api/TransactionDetails/GetTransactionDetailsByDates/';\r\n    private getTransactionDetailsByReferenceNoUrl = 'api/TransactionDetails/GetTransactionDetailsByReferenceNo/';\r\n\r\n    constructor(private http: HttpClient, private globalService: GlobalService) {\r\n        this.transactionDetailsUrl = globalService.baseUrl() + this.transactionDetailsUrl;\r\n        this.getTransactionDetailsUrl = globalService.baseUrl() + this.getTransactionDetailsUrl;\r\n        this.getTransactionDetailsByUserIdUrl = globalService.baseUrl() + this.getTransactionDetailsByUserIdUrl;\r\n        this.getTransactionDetailsByDatesUrl = globalService.baseUrl() + this.getTransactionDetailsByDatesUrl;\r\n        this.getTransactionDetailsByReferenceNoUrl = globalService.baseUrl() + this.getTransactionDetailsByReferenceNoUrl;\r\n    }\r\n\r\n    submitTransactionDetails(transactionDetails: ITransactionDetails): Observable<ITransactionDetails> {\r\n        const tokenHeader = new HttpHeaders({ \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\") });\r\n\r\n        return this.http.post<ITransactionDetails>(this.transactionDetailsUrl, transactionDetails, { headers: tokenHeader })\r\n            .pipe(\r\n                tap(data => console.log()),\r\n                catchError(this.handleError)\r\n            );\r\n    }\r\n\r\n    getTransactionDetails(): Observable<ITransactionDetails[]> {\r\n        const tokenHeader = new HttpHeaders({ \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\") });\r\n\r\n        return this.http.get<ITransactionDetails[]>(this.getTransactionDetailsUrl, { headers: tokenHeader })\r\n            .pipe(\r\n                tap(data => console.log()),\r\n                catchError(this.handleError)\r\n            );\r\n    }\r\n\r\n    getTransactionDetailsByUserId(): Observable<ITransactionDetails[]> {\r\n        const tokenHeader = new HttpHeaders({ \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\") });\r\n\r\n        return this.http.get<ITransactionDetails[]>(this.getTransactionDetailsByUserIdUrl, { headers: tokenHeader })\r\n            .pipe(\r\n                tap(data => console.log()),\r\n                catchError(this.handleError)\r\n            );\r\n    }\r\n\r\n    getTransactionDetailsByDates(startDate: Date, endDate: Date): Observable<ITransactionDetails[]> {\r\n        const tokenHeader = new HttpHeaders({ \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\") });\r\n\r\n        return this.http.get<ITransactionDetails[]>(this.getTransactionDetailsByDatesUrl + startDate + \"/\" + endDate, { headers: tokenHeader })\r\n            .pipe(\r\n                tap(data => console.log()),\r\n                catchError(this.handleError)\r\n            );\r\n    }\r\n\r\n    getTransactionDetailsByReferenceNo(referenceNo: string): Observable<ITransactionDetails> {\r\n        const tokenHeader = new HttpHeaders({ \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\") });\r\n\r\n        return this.http.get<ITransactionDetails>(this.getTransactionDetailsByReferenceNoUrl + referenceNo, { headers: tokenHeader })\r\n            .pipe(\r\n                tap(data => console.log()),\r\n                catchError(this.handleError)\r\n            );\r\n    }\r\n\r\n    private handleError(err: HttpErrorResponse) {\r\n        // in a real world app, we may send the server to some remote logging infrastructure\r\n        // instead of just logging it to the console\r\n        let errorMessage = '';\r\n        if (err.error instanceof ErrorEvent) {\r\n            // A client-side or network error occurred. Handle it accordingly.\r\n            errorMessage = `An error occurred: ${err.error.message}`;\r\n        } else {\r\n            // The backend returned an unsuccessful response code.\r\n            // The response body may contain clues as to what went wrong,\r\n            errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n        }\r\n        console.error(errorMessage);\r\n        return throwError(errorMessage);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpEventType, HttpEvent } from '@angular/common/http';\nimport { IUser } from '../shared/interface/IUser';\nimport { Observable, throwError } from 'rxjs';\nimport { tap, catchError } from 'rxjs/operators';\nimport { GlobalService } from './global.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class UserService {\n  private usersUrl = 'api/User';\n  private userByUserNameUrl = 'api/User/GetUserByUserName/';\n  private activeUserByUserNameUrl = 'api/User/GetActiveUserByUserName/';\n  private loaderUsersByTeamUrl = 'api/User/GetAllLoaderUsersByTeam';\n  private userProfileUrl = 'api/UserProfile';\n\n  constructor(private http: HttpClient, private globalService: GlobalService) {\n    this.usersUrl = globalService.baseUrl() + this.usersUrl;\n    this.userByUserNameUrl = globalService.baseUrl() + this.userByUserNameUrl;\n    this.activeUserByUserNameUrl = globalService.baseUrl() + this.activeUserByUserNameUrl;\n    this.loaderUsersByTeamUrl = globalService.baseUrl() + this.loaderUsersByTeamUrl;\n    this.userProfileUrl = globalService.baseUrl() + this.userProfileUrl;\n  }\n\n  createUser(user: IUser): Observable<IUser> {\n    const headers = new HttpHeaders({ \"Content-Type\": \"application/json\" });\n\n    return this.http.post<IUser>(this.usersUrl, user, { headers })\n      .pipe(\n        tap(data => console.log('All: ' + JSON.stringify(data))),\n        catchError(this.handleError)\n      );\n  }\n\n  getUserProfile(): Observable<IUser> {\n    var tokenHeader = new HttpHeaders({ \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\") })\n\n    return this.http.get<IUser>(this.userProfileUrl, { headers: tokenHeader })\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  getUserByUserName(userName: string): Observable<IUser> {\n    const headers = new HttpHeaders({ \"Content-Type\": \"application/json\" });\n\n    return this.http.get<IUser>(this.userByUserNameUrl + userName, { headers: headers })\n      .pipe(\n        tap(data => console.log()),\n        catchError(this.handleError)\n      );\n  }\n\n  getActiveUserByUserName(userName: string): Observable<IUser> {\n    const headers = new HttpHeaders({ \"Content-Type\": \"application/json\" });\n\n    return this.http.get<IUser>(this.activeUserByUserNameUrl + userName, { headers: headers })\n      .pipe(\n        tap(data => console.log()),\n        catchError(this.handleError)\n      );\n  }\n\n  getAllLoaderUsersByTeam(): Observable<IUser[]> {\n    var tokenHeader = new HttpHeaders({ \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\") })\n\n    return this.http.get<IUser[]>(this.loaderUsersByTeamUrl, { headers: tokenHeader })\n      .pipe(\n        tap(data => console.log()),\n        catchError(this.handleError)\n      );\n  }\n\n  private handleError(err: HttpErrorResponse) {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    console.error(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { debounceTime } from 'rxjs/operators';\n\n\nimport { Constants } from 'src/app/shared/constants';\nimport { GlobalService } from 'src/app/shared/global.service';\nimport { ILogin } from 'src/app/shared/interface/ILogin';\nimport { IUser } from 'src/app/shared/interface/IUser';\nimport { LoginService } from 'src/app/shared/login.service';\nimport { UserService } from 'src/app/shared/user.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n    headerText: string = 'Find new local restaurants and independent home cooks';\n    subHeaderText: string = 'Tired of the common restaurants you see? Try new local foods, homemade foods and more';\n    loginForm: FormGroup;\n    loginData: ILogin;\n    constants: Constants;\n    userNameMessage: string;\n    passwordMessage: string;\n    errorMessage: \"\";\n    userNameVerificationMessage: string;\n\n    constructor(private fb: FormBuilder, private globalService: GlobalService, private loginService: LoginService, private router: Router,\n        private toastr: ToastrService, private userService: UserService, private ngxService: NgxUiLoaderService) {\n        this.constants = new Constants();\n        this.globalService.setCurrentPage(\"login\");\n    }\n\n    @Output() isFormDirty: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    private userNameValMessages = {\n        required: \"Please enter your username.\",\n        pattern: \"Username is invalid.\"\n    }\n\n    private passwordValMessages = {\n        required: \"Please enter your password.\",\n    }\n\n    ngOnInit(): void {\n        if (this.globalService.isAuthenticated()) {\n            this.router.navigate(['/home']);\n        }\n\n        this.loginForm = this.fb.group({\n            userName: ['', [Validators.required, Validators.pattern(/^[a-zA-Z0-9_-]+$/)]],\n            password: ['', [Validators.required]]\n        });\n\n        const userNameControl = this.loginForm.get(this.constants.userName);\n        userNameControl.valueChanges.pipe(debounceTime(1000)).subscribe(\n            value => {\n                this.setMessage(userNameControl, this.constants.userName)\n                this.verifyUserName(value)\n            });\n\n        const passwordControl = this.loginForm.get(this.constants.password);\n        passwordControl.valueChanges.pipe(debounceTime(1000)).subscribe(\n            value => this.setMessage(passwordControl, this.constants.password)\n        );\n\n        this.loginForm.valueChanges.subscribe(\n            value => this.isFormDirty.emit(true)\n        );\n    }\n\n    verifyUserName(value: string): any {\n        this.userService.getActiveUserByUserName(value).subscribe({\n            next: userDetail => this.userNameChecker(userDetail),\n            error: err => this.errorMessage = err\n        });\n    }\n\n    userNameChecker(userDetail: IUser) {\n        this.userNameVerificationMessage = null;\n        if (userDetail != null && userDetail.userId != null && userDetail.isActive == false) {\n            if (userDetail.userType == 'Loader') {\n                this.userNameVerificationMessage = \"This Loader Account is not yet active. Please contact your Financer.\"\n            }\n            else if (userDetail.userType == 'Financer') {\n                this.userNameVerificationMessage = \"This Financer Account is not yet active. Please contact the system administrator\"\n            }\n        }\n    }\n\n    setMessage(c: AbstractControl, validationType: string): void {\n        if (validationType == this.constants.userName) {\n            this.userNameMessage = \"\";\n            if ((c.touched || c.dirty) && c.errors) {\n                this.userNameMessage = Object.keys(c.errors).map(\n                    key => this.userNameValMessages[key]).join(' ');\n            }\n        } else if (validationType == this.constants.password) {\n            this.passwordMessage = \"\";\n            if ((c.touched || c.dirty) && c.errors) {\n                this.passwordMessage = Object.keys(c.errors).map(\n                    key => this.passwordValMessages[key]).join(' ');\n            }\n        }\n    }\n\n    setLoginValue(loginCustomerForm: FormGroup): ILogin {\n        return {\n            userName: loginCustomerForm.get(\"userName\").value,\n            password: loginCustomerForm.get(\"password\").value,\n        };\n    }\n\n    loginUser(): void {\n        this.ngxService.start();\n        if (this.loginForm.valid) {\n            if (this.loginForm.dirty) {\n                this.loginService.loginUser(this.setLoginValue(this.loginForm)).subscribe({\n                    next: (res: any) => {\n                        localStorage.setItem('token', res.token);\n                        localStorage.setItem('isAuthenticated', \"true\");\n                        this.globalService.setUserLoggedIn(true);\n                        this.userService.getUserProfile().subscribe({\n                            next: user => this.setUserDetails(user),\n                            error: err => console.log(err)\n                        });\n                        this.router.navigate(['/home']);\n                        this.toastr.success(\"Welcome to Casino MS\", \"Login Successfully\");\n                    },\n                    error: err => this.errorHandler(err)\n                })\n            }\n        }\n    }\n\n    setUserDetails(user: IUser): void {\n        localStorage.setItem('fullName', user.firstName + ' ' + user.lastName);\n        localStorage.setItem('UserType', user.userType);\n        this.ngxService.stop();\n    }\n\n    errorHandler(message: string) {\n        if (message.includes(\"400\")) {\n            this.toastr.error(\"Incorrect Username or Password\", \"Authentication Failed\");\n        } else {\n            console.log(message);\n        }\n\n        this.ngxService.stop();\n    }\n}\n","<div class=\"login-section\">\n    <div class=\"row \">\n        <div class=\"col margin-top-sm\">\n            <form (ngSubmit)=\"loginUser()\" [formGroup]=\"loginForm\">\n                <!-- Username -->\n                <div class=\"row margin-top-sm d-flex justify-content-center\">\n                    <div class=\"col-lg-8\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><i class=\"fa fa-pencil\"></i></span>\n                                </div>\n                                <input id=\"UserNameId\" class=\"form-control\" placeholder=\"Username *\" formControlName=\"userName\" type=\"text\" [ngClass]=\"{'is-invalid': userNameMessage || userNameVerificationMessage, 'is-valid': (!userNameMessage || !userNameVerificationMessage) && loginForm.get('userName').touched && loginForm.get('userName').valid , '':loginForm.get('userName').untouched}\">\n                                <span class=\"invalid-feedback\">\n                                        {{userNameMessage}}\n                                        {{userNameVerificationMessage}}\n                                    </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Password -->\n                <div class=\"row margin-top-sm d-flex justify-content-center\">\n                    <div class=\"col-lg-8\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><i class=\"fa fa-unlock-alt margin-right-xsm\"></i></span>\n                                </div>\n                                <input id=\"PasswordId\" class=\"form-control\" placeholder=\"Password *\" formControlName=\"password\" type=\"password\" [ngClass]=\"{'is-invalid': passwordMessage}\">\n                                <span class=\"invalid-feedback\">\n                                            {{passwordMessage}}\n                                        </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row justify-content-center margin-top-sm\">\n                    <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!loginForm.valid || userNameVerificationMessage\">Login</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { Constants } from 'src/app/shared/constants';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { IUser } from 'src/app/shared/interface/IUser';\nimport { ITeams } from 'src/app/shared/interface/ITeams';\nimport { UserService } from 'src/app/shared/user.service';\nimport { DefinitionService } from 'src/app/shared/definition.service';\nimport { IUserType } from 'src/app/shared/interface/IUserType';\nimport { debounceTime } from 'rxjs/operators';\nimport { GlobalService } from 'src/app/shared/global.service';\nimport { Router } from '@angular/router';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})\nexport class RegistrationComponent implements OnInit {\n  //#region Properties\n\n  registrationForm: FormGroup;\n  constants: Constants;\n  firstNameMessage: string;\n  lastNameMessage: string;\n  aliasMessage: string;\n  teamsMessage: string;\n  userTypesMessage: string;\n  userNameMessage: string;\n  emailAddressMessage: string;\n  passwordMessage: string;\n  confirmPasswordMessage: string;\n  userNameVerificationMessage: string;\n  errorMessage: \"\";\n  teamList: string[] = [];\n  userTypeList: string[] = [];\n  userDetail: IUser;\n\n  //#endregion\n\n  @Output() isFormDirty: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  private firstNameValMessages = {\n    required: \"Please enter your first name.\",\n    maxlength: \"First name can't exceed 20 characters.\"\n  }\n\n  private lastNameValMessages = {\n    required: \"Please enter your last name.\",\n    maxlength: \"Last name can't exceed 20 characters.\"\n  }\n\n  private aliasValMessages = {\n    required: \"Please enter your Alias.\",\n    maxlength: \"Alias can't exceed 20 characters.\"\n  }\n\n  private teamsValMessages = {\n    required: \"Please choose your team.\",\n  }\n\n  private userTypesValMessages = {\n    required: \"Please choose your user type.\",\n  }\n\n  private emailAddressValMessages = {\n    required: \"Please enter your e-mail address.\",\n    email: \"Please enter a valid e-mail address.\",\n    maxlength: \"E-mail address can't exceed 30 characters.\"\n  }\n\n  private userNameValMessages = {\n    required: \"Please enter your username.\",\n    maxlength: \"Username can't exceed 20 characters.\",\n    pattern: \"Username is invalid.\"\n  }\n\n  private passwordValMessages = {\n    required: \"Please enter your password.\",\n    maxlength: \"Password can't exceed 20 characters.\",\n    minlength: \"Password should have a minimum of 5 characters.\"\n  }\n\n  private confirmPasswordValMessages = {\n    required: \"Please confirm your password.\"\n  }\n\n  constructor(private fb: FormBuilder, private userService: UserService, private definitionService: DefinitionService, private globalService: GlobalService,\n    private router: Router, private ngxService: NgxUiLoaderService) {\n    this.constants = new Constants();\n  }\n\n  ngOnInit(): void {\n    if (this.globalService.isAuthenticated()) {\n      this.router.navigate(['/home']);\n    }\n\n    this.registrationForm = this.fb.group({\n      firstName: ['', [Validators.required, Validators.maxLength(20)]],\n      lastName: ['', [Validators.required, Validators.maxLength(20)]],\n      alias: ['', [Validators.required, Validators.maxLength(30)]],\n      emailAddress: ['', [Validators.required, Validators.email, Validators.maxLength(30)]],\n      userName: ['', [Validators.required, Validators.maxLength(30), Validators.pattern(/^[a-zA-Z0-9_-]+$/)]],\n      teams: ['', [Validators.required]],\n      userTypes: ['', [Validators.required]],\n      passwordGroup: this.fb.group({\n        password: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(20)]],\n        confirmPassword: ['', [Validators.required]],\n      }, { validator: this.passwordMatcher })\n    });\n\n    const firstNameControl = this.registrationForm.get(this.constants.firstName);\n    firstNameControl.valueChanges.pipe(debounceTime(1000)).subscribe(\n      value => this.setMessage(firstNameControl, this.constants.firstName)\n    );\n\n    const lastNameControl = this.registrationForm.get(this.constants.lastName);\n    lastNameControl.valueChanges.pipe(debounceTime(1000)).subscribe(\n      value => this.setMessage(lastNameControl, this.constants.lastName)\n    );\n\n    const aliasControl = this.registrationForm.get(this.constants.alias);\n    aliasControl.valueChanges.pipe(debounceTime(1000)).subscribe(\n      value => this.setMessage(aliasControl, this.constants.alias)\n    );\n\n    const teamsControl = this.registrationForm.get(this.constants.teams);\n    teamsControl.valueChanges.pipe(debounceTime(1000)).subscribe(\n      value => this.setMessage(teamsControl, this.constants.teams)\n    );\n\n    const userTypesControl = this.registrationForm.get(this.constants.userTypes);\n    userTypesControl.valueChanges.pipe(debounceTime(1000)).subscribe(\n      value => this.setMessage(userTypesControl, this.constants.userTypes)\n    );\n\n    const emailAddressControl = this.registrationForm.get(this.constants.emailAddress);\n    emailAddressControl.valueChanges.pipe(debounceTime(1000)).subscribe(\n      value => this.setMessage(emailAddressControl, this.constants.emailAddress)\n    );\n\n    const userNameControl = this.registrationForm.get(this.constants.userName);\n    userNameControl.valueChanges.pipe(debounceTime(1000)).subscribe(\n      value => {\n        this.setMessage(userNameControl, this.constants.userName);\n        this.verifyUserName(value);\n      });\n\n    const passwordControl = this.registrationForm.get(\"passwordGroup.password\");\n    passwordControl.valueChanges.pipe(debounceTime(1000)).subscribe(\n      value => this.setMessage(passwordControl, this.constants.password)\n    );\n\n    const confirmPasswordControl = this.registrationForm.get(\"passwordGroup.confirmPassword\");\n    confirmPasswordControl.valueChanges.pipe(debounceTime(1000)).subscribe(\n      value => this.setMessage(confirmPasswordControl, this.constants.confirmPassword)\n    );\n\n    this.registrationForm.valueChanges.subscribe(\n      value => this.isFormDirty.emit(true)\n    );\n\n    this.definitionService.getTeams().subscribe(\n      (data) => {\n        (<Array<ITeams>>data).forEach(types => {\n          this.teamList.push(types.description);\n        })\n      }\n    );\n\n    this.definitionService.getUserTypes().subscribe(\n      (data) => {\n        (<Array<IUserType>>data).forEach(types => {\n          this.userTypeList.push(types.description);\n        })\n      }\n    );\n  }\n\n  verifyUserName(value: string): any {\n    this.userService.getUserByUserName(value).subscribe({\n      next: userDetail => this.userNameChecker(userDetail),\n      error: err => this.errorMessage = err\n    });\n  }\n\n  userNameChecker(userNameDetail: IUser) {\n    this.userNameVerificationMessage = null;\n    if (userNameDetail != null && userNameDetail.userId != null) {\n      this.userNameVerificationMessage = \"This username is already taken. Please choose another username.\"\n    }\n  }\n\n  passwordMatcher(c: AbstractControl): { [key: string]: boolean } | null {\n    const passwordControl = c.get(\"password\");\n    const confirmPasswordControl = c.get(\"confirmPassword\");\n\n    if (passwordControl.pristine || confirmPasswordControl.pristine) {\n      return null;\n    }\n\n    if (passwordControl.value == confirmPasswordControl.value) {\n      return null;\n    }\n\n    return { 'match': true }\n  }\n\n  setMessage(c: AbstractControl, validationType: string): void {\n    if (validationType == this.constants.firstName) {\n      this.firstNameMessage = \"\";\n      if ((c.touched || c.dirty) && c.errors) {\n        this.firstNameMessage = Object.keys(c.errors).map(\n          key => this.firstNameValMessages[key]).join(' ');\n      }\n    } else if (validationType == this.constants.lastName) {\n      this.lastNameMessage = \"\";\n      if ((c.touched || c.dirty) && c.errors) {\n        this.lastNameMessage = Object.keys(c.errors).map(\n          key => this.lastNameValMessages[key]).join(' ');\n      }\n    } else if (validationType == this.constants.alias) {\n      this.aliasMessage = \"\";\n      if ((c.touched || c.dirty) && c.errors) {\n        this.aliasMessage = Object.keys(c.errors).map(\n          key => this.aliasValMessages[key]).join(' ');\n      }\n    } else if (validationType == this.constants.teams) {\n      this.teamsMessage = \"\";\n      if ((c.touched || c.dirty) && c.errors) {\n        this.teamsMessage = Object.keys(c.errors).map(\n          key => this.teamsValMessages[key]).join(' ');\n      }\n    } else if (validationType == this.constants.userTypes) {\n      this.userTypesMessage = \"\";\n      if ((c.touched || c.dirty) && c.errors) {\n        this.userTypesMessage = Object.keys(c.errors).map(\n          key => this.userTypesValMessages[key]).join(' ');\n      }\n    } else if (validationType == this.constants.emailAddress) {\n      this.emailAddressMessage = \"\";\n      if ((c.touched || c.dirty) && c.errors) {\n        this.emailAddressMessage = Object.keys(c.errors).map(\n          key => this.emailAddressValMessages[key]).join(' ');\n      }\n    } else if (validationType == this.constants.userName) {\n      this.userNameMessage = \"\";\n      if ((c.touched || c.dirty) && c.errors) {\n        this.userNameMessage = Object.keys(c.errors).map(\n          key => this.userNameValMessages[key]).join(' ');\n      }\n    } else if (validationType == this.constants.password) {\n      this.passwordMessage = \"\";\n      if ((c.touched || c.dirty) && c.errors) {\n        this.passwordMessage = Object.keys(c.errors).map(\n          key => this.passwordValMessages[key]).join(' ');\n      }\n    } else if (validationType == this.constants.confirmPassword) {\n      this.confirmPasswordMessage = \"\";\n      if ((c.touched || c.dirty) && c.errors) {\n        this.confirmPasswordMessage = Object.keys(c.errors).map(\n          key => this.confirmPasswordValMessages[key]).join(' ');\n      }\n    }\n  }\n\n  setUserValue(userForm: FormGroup): IUser {\n    return {\n      firstName: userForm.get(\"firstName\").value,\n      lastName: userForm.get(\"lastName\").value,\n      alias: userForm.get(\"alias\").value,\n      teamName: userForm.get(\"teams\").value,\n      emailAddress: userForm.get(\"emailAddress\").value,\n      userName: userForm.get(\"userName\").value,\n      password: userForm.get(\"passwordGroup.confirmPassword\").value,\n      userType: userForm.get(\"userTypes\").value,\n      userId: \"\",\n      isActive: false\n    };\n  }\n\n  registerForm(): void {\n    if (this.registrationForm.valid) {\n      if (this.registrationForm.dirty) {\n        this.ngxService.start();\n        this.userService.createUser(this.setUserValue(this.registrationForm)).subscribe({\n          next: () => this.onSaveComplete(),\n          error: err => this.errorMessage = err\n        })\n      }\n    }\n  }\n\n  onSaveComplete(): void {\n    // Reset the form to clear the flags\n    this.registrationForm.reset();\n    this.isFormDirty.emit(false)\n    alert(\"Thank you for your registration at Casino MS! We have sent a verification on your registered e-mail.\")\n    this.ngxService.stop();\n    this.router.navigate(['/user/login']);\n  }\n}\n","<div class=\"registration-section\">\n    <div class=\"row \">\n        <div class=\"col margin-top-sm\">\n            <form (ngSubmit)=\"registerForm()\" [formGroup]=\"registrationForm\">\n                <!-- Name -->\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <div class=\"form-group form\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><i class=\"fa fa-user margin-right-xsm\"></i></span>\n                                </div>\n                                <input id=\"FirstNameId\" class=\"form-control\" placeholder=\"First Name *\" formControlName=\"firstName\" type=\"text\" [ngClass]=\"{'is-invalid': firstNameMessage, 'is-valid': !firstNameMessage && registrationForm.get('firstName').touched && registrationForm.get('firstName').valid , '':registrationForm.get('firstName').untouched}\">\n                                <span class=\"invalid-feedback\">\n                                        {{firstNameMessage}}\n                                    </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><i class=\"fa fa-user margin-right-xsm\"></i></span>\n                                </div>\n                                <input id=\"LastNameId\" class=\"form-control\" placeholder=\"Last Name *\" formControlName=\"lastName\" type=\"text\" [ngClass]=\"{'is-invalid': lastNameMessage, 'is-valid': !lastNameMessage && registrationForm.get('lastName').touched && registrationForm.get('lastName').valid , '':registrationForm.get('lastName').untouched}\">\n                                <span class=\"invalid-feedback\">\n                                        {{lastNameMessage}}\n                                    </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- E-mail -->\n                <div class=\"row margin-top-sm\">\n                    <div class=\"col\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><i class=\"fa fa-envelope\"></i></span>\n                                </div>\n                                <input id=\"EmailAddressId\" class=\"form-control\" placeholder=\"E-mail Address *\" formControlName=\"emailAddress\" type=\"email\" [ngClass]=\"{'is-invalid': emailAddressMessage, 'is-valid': !emailAddressMessage && registrationForm.get('emailAddress').touched && registrationForm.get('emailAddress').valid , '':registrationForm.get('emailAddress').untouched}\">\n                                <span class=\"invalid-feedback\">\n                                        {{emailAddressMessage}}\n                                    </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Alias & Team Name -->\n                <div class=\"row margin-top-sm\">\n                    <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><i class=\"fa fa-id-card\"></i></span>\n                                </div>\n                                <input id=\"AliasId\" class=\"form-control\" placeholder=\"Alias (Ie. Loader/Financer Name) *\" formControlName=\"alias\" type=\"text\" [ngClass]=\"{'is-invalid': aliasMessage, 'is-valid': !aliasMessage && registrationForm.get('alias').touched && registrationForm.get('alias').valid , '':registrationForm.get('alias').untouched}\">\n                                <span class=\"invalid-feedback\">\n                                        {{aliasMessage}}\n                                    </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><i class=\"fa fa-users\"></i></span>\n                                </div>\n                                <select class=\"custom-select\" formControlName=\"teams\" id=\"teams\">\n                                        <option value=\"\" defaultValue disabled>Please choose your team *</option>\n                                        <option *ngFor=\"let team of teamList; let i = index\" [value]=\"team\">\n                                          {{team}}\n                                        </option>\n                                    </select>\n                                <span class=\"invalid-feedback\">\n                                        {{teamsMessage}}\n                                    </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- User Type -->\n                <div class=\"row margin-top-sm\">\n                    <div class=\"col\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><i class=\"fa fa-id-badge margin-right-xsm\"></i></span>\n                                </div>\n                                <select class=\"custom-select\" formControlName=\"userTypes\" id=\"userTypes\">\n                                        <option value=\"\" defaultValue disabled>Please choose your user type *</option>\n                                        <option *ngFor=\"let userType of userTypeList; let i = index\" [value]=\"userType\">\n                                          {{userType}}\n                                        </option>\n                                    </select>\n                                <span class=\"invalid-feedback\">\n                                    {{userTypesMessage}}\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Username -->\n                <div class=\"row margin-top-sm\">\n                    <div class=\"col\">\n                        <div class=\"form-group\">\n                            <div class=\"input-group\">\n                                <div class=\"input-group-prepend\">\n                                    <span class=\"input-group-text\"><i class=\"fa fa-pencil\"></i></span>\n                                </div>\n                                <input id=\"UserNameId\" class=\"form-control\" placeholder=\"Username *\" formControlName=\"userName\" type=\"text\" [ngClass]=\"{'is-invalid': userNameMessage || userNameVerificationMessage, 'is-valid': (!userNameMessage || !userNameVerificationMessage) && registrationForm.get('userName').touched && registrationForm.get('userName').valid , '':registrationForm.get('userName').untouched}\">\n                                <span class=\"invalid-feedback\">\n                                        {{userNameMessage}}\n                                        {{userNameVerificationMessage}}\n                                    </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div formGroupName=\"passwordGroup\">\n                    <!-- Password & Confirm Password-->\n                    <div class=\"row margin-top-sm\">\n                        <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                                <div class=\"input-group\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\"><i class=\"fa fa-unlock-alt margin-right-xsm\"></i></span>\n                                    </div>\n                                    <input id=\"PasswordId\" class=\"form-control\" placeholder=\"Password *\" formControlName=\"password\" type=\"password\" [ngClass]=\"{'is-invalid': passwordMessage}\">\n                                    <span class=\"invalid-feedback\">\n                                            {{passwordMessage}}\n                                        </span>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <div class=\"form-group\">\n                                <div class=\"input-group\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\"><i class=\"fa fa-unlock-alt margin-right-xsm\"></i></span>\n                                    </div>\n                                    <input id=\"ConfirmPasswordId\" class=\"form-control\" placeholder=\"Confirm Password *\" formControlName=\"confirmPassword\" type=\"password\" [ngClass]=\"{'is-invalid': confirmPasswordMessage}\">\n                                    <span class=\"invalid-feedback\">\n                                            <span\n                                                *ngIf=\"registrationForm.get('passwordGroup.confirmPassword').errors?.required\">\n                                                Please confirm your password.\n                                            </span>\n                                    <span *ngIf=\"registrationForm.get('passwordGroup').errors?.match\">\n                                            Confirmation does not match the password.\n                                        </span>\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row justify-content-center margin-top-sm\">\n                    <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!registrationForm.valid || userNameVerificationMessage\">Register</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container margin-top-lg user-container\">\n    <div class=\"card\">\n        <div class=\"card-header d-flex justify-content-center\">\n            <div class=\"media d-flex align-items-center\">\n                <img class=\"align-self-center mr-3\" style=\"width: 45px; height: 45px;\" src=\"\\assets\\images\\iconfinder_Gambler_3525383.png\" alt=\"Generic placeholder image\">\n                <div class=\"media-body\">\n                    <h3 class=\"mt-0 text-uppercase font-weight-light\">Casino Management System</h3>\n                </div>\n            </div>\n        </div>\n        <div class=\"card-body\">\n            <ul class=\"nav nav-tabs d-flex justify-content-center\">\n                <li class=\" nav-item \">\n                    <a class=\"nav-link\" data-toggle=\"tab \" [routerLink]=\"[ '/user/login'] \">Login</a>\n                </li>\n                <li class=\"nav-item \">\n                    <a class=\"nav-link \" data-toggle=\"tab \" [routerLink]=\"[ '/user/registration'] \">Register</a>\n                </li>\n            </ul>\n            <div class=\"margin-top-md\">\n                <router-outlet></router-outlet>\n            </div>\n        </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}